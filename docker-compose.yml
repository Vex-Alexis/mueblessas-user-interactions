services:

  dynamodb-local:
    image: amazon/dynamodb-local
    container_name: dynamodb
    ports:
      - "8000:8000"
    volumes:
      - dynamodb_data:/home/dynamodb/data
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - backend

  dynamodb-init:
    image: amazon/aws-cli
    container_name: dynamodb-init
    depends_on:
      - dynamodb-local
    entrypoint: >
      sh -c "sleep 5 &&
      aws dynamodb create-table --table-name interaction_stats --attribute-definitions AttributeName=timestamp,AttributeType=S --key-schema AttributeName=timestamp,KeyType=HASH --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5 --endpoint-url http://dynamodb-local:8000 --region us-east-1 || echo 'La tabla ya existe o se produjo un error controlado'"
    environment:
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
    networks:
      - backend

  user-interactions:
    build: 
      context: ./muebles-user-interactions
      dockerfile: deployment/Dockerfile
    container_name: user-interactions
    ports:
      - "8080:8080"
    depends_on:
      - dynamodb-local
      - dynamodb-init
      - rabbitmq
    environment:
      SPRING_PROFILES_ACTIVE: local
      AWS_REGION: us-east-1
      AWS_ENDPOINT: http://dynamodb-local:8000
      AWS_ACCESS_KEY_ID: fake
      AWS_SECRET_ACCESS_KEY: fake
      QUEUE_NAME: event.stats.validated
    networks:
      - backend

volumes:
  dynamodb_data:

networks:
  backend: